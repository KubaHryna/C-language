int main(){
//zadanie 1.3.6
    int a,b,c,d,e,f;
    scanf("%d %d %d %d %d %d" ,&a, &b, &c, &d, &e, &f);
    int w=0;
    w=(a*e)-(b*d);
    int w1=0;
    float x,y;
    int w2=0;
    if(w==0){
        w1=0;
        w2=0;
        scanf("Nieskonczenie wiele rozwiazan,uklad nieoznaczony");
    }else{

        w1=(c*e)-(b*f);
        w2=(a*f)-(c*d);
        x=(float)w1/(float)w;
        y=(float)w2/(float)w;
    }
    printf("Twoj glowny wyznacznik wynosi: %d \n X wynosi :%f \n Y wynosi : %f" ,w,(float)x,(float)y);
//Zad 1.3.7
float a,b,c;
    float d,pd;
    float x1,x2;
    scanf("%f %f %f",&a,&b,&c);
    d=pow(b,2)-(4*a*c);
    printf("Zdefiniowales rownanie: ");
    if(a==0) printf("");
    else if(a==1) printf("x^2");
    else if(a==-1) printf("-x^2");
    else printf("%dx^2",(int)a);

    if(b==1) printf("+x");
    else if(b==-1) printf("-x");
    else if(b==0) printf("");
    else if(b>0) printf("%d*x",(int)b);
    else printf("%d*x",(int)b);

    if(c==0)printf("");
    else if(c>0)printf("+%d",(int)c);
    else printf("-%d",(int)c);

    if(d==0){
        printf("Jest jedno rozwiazanie %f",x1);
    }else if(d>0){
         pd=sqrt(d);
    x1=(-b-pd)/(2*a);
    x2=(-b+pd)/(2*a);

        printf("Twoje rozwiazania to %f i %f",x1,x2);
    }else{
        printf("Brak rozwizan ");
    }

//pętle for
    int a,b,c;
    scanf("%d %d",&a,&b);
    c=a;
    for(int i=1;i<=b;i++){
        printf("%d\n",a);
        a=a+c;
    }

//pętla która wypisuje nam wielokrotność liczby w przedziale
    int a,b,c,d;
    scanf("%d %d %d",&a,&b,&d);
    c=a;
    while(a<d){
        if(a>b)printf("%d\n",a);
        a=a+c;
    }
//silnia
    int a,b=1;
    scanf("%d",&a);
    for(int i=1;i<=a;i++){
    b=b*i;
    }

    printf("%d",b);

//silnia ktora zlicza tylko parzyste
    int a,b=1;
    scanf("%d",&a);
    for(int i=1;i<=a;i++){
    if(i%2==0)b=b*i;
    }

    printf("%d",b);

//zadanie NWD
   int n,m,pom;
   scanf("%d %d",&n,&m);
   while(n%m!=0){
    pom=n%m;
    n=m;
    m=pom;
   }
printf("%d",pom);
return 0;
}
